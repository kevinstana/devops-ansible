---
- hosts: frontend
# - hosts: all
  pre_tasks:
    - name: "APT - install nginx"
      apt:
        name: nginx
        update_cache: yes
      become: yes

    - name: Install nvm
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
        export NVM_DIR=\"$HOME/.nvm
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: Setup .profile
      ansible.builtin.lineinfile:
        path: ~/.profile
        line: source ~/.nvm/nvm.sh # This will make sure Node is on the user's PATH
        create: yes

    - name: "debug"
      ansible.builtin.debug:
        msg: "PATH : {{ ansible_env.PATH }}"

    - name: Install node
      shell: |
        source $HOME/.nvm/nvm.sh && nvm install 16.20.2
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/versions/node/v16.20.2"

    - name: Install angular/cli
      shell: |
        export NVM_DIR=\"$HOME/.nvm
        export PATH=$PATH:~/.nvm/versions/node/v16.20.2/bin
        npm install -g @angular/cli@15.0.5

    - name: Install Git
      package:
        name: git
        state: latest
      become: yes

  tasks:
    - name: "Clone the angular repository"
      git:
          repo: "{{ repo }}"
          dest: "{{ frontendappdir }}"
          version: "{{ branch }}"
          force: yes

    - name: "Install dependencies"
      shell: |
        export PATH=$PATH:~/.nvm/versions/node/v16.20.2/bin; npm install
      args:
        chdir: "{{ frontendappdir }}"

    - name: "Build the angular application"
      shell: |
        export NVM_DIR=\"$HOME/.nvm
        export PATH=$PATH:~/.nvm/versions/node/v16.20.2/bin
        ng build --configuration=production
      args:
        chdir: "{{ frontendappdir }}"

    - name: Copy dist in nginx location 
      copy:
        src: "{{ frontendappdir }}/dist/angular-jwt-auth/"
        dest: "{{ site_location }}"
        remote_src: True
        mode: 7777
        force: true
      notify: restart nginx
      become: yes

    - name: copy nginx conf file
      template:
        src: ../files/nginx.angular.j2
        dest: "/etc/nginx/sites-available/angular-jwt-auth"
      become: yes

    - name: enable angular site in nginx
      file:
        src: "/etc/nginx/sites-available/angular-jwt-auth"
        dest: "/etc/nginx/sites-enabled/angular-jwt-auth"
        state: link
      become: yes

    - name: de-activate default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: yes
      notify: restart nginx

    - name: Set permissions for site directory
      file:
        path: "{{ site_location }}"
        mode: "0777"
        recurse: yes
      become: yes

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: yes